#Specifying a specific port to run on.
server.port=8080
server.server-header=unspecified
# To use this configuration, add to system properties : -Djava.util.logging.config.file="/path/to/file"
.level=INFO
build.version=@project.version@
spring.jackson.serialization.INDENT_OUTPUT=true

# So app starts despite "table already exists" errors.
spring.datasource.continue-on-error=true
# Enforces database initialization
spring.datasource.initialization-mode=always
spring.cloud.gcp.sql.instance-connection-name=database
spring.cloud.gcp.sql.database-name=database
spring.datasource.username=username
spring.datasource.password=password
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
# Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect =org.hibernate.dialect.PostgreSQL10Dialect
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.connection.release_mode= after_transaction
spring.jackson.serialization.indent_output=true

spring.datasource.hikari.leak-detection-threshold=600000
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.maxLifetime=2000000
spring.datasource.hikari.connection-timeout = 60000
#maximum number of milliseconds that a client will wait for a connection
spring.datasource.hikari.minimum-idle= 10
#minimum number of idle connections maintained by HikariCP in a connection pool
spring.datasource.hikari.maximum-pool-size= 10
#maximum pool size
spring.datasource.hikari.idle-timeout=10000
#maximum idle time for connection
spring.datasource.hikari.max-lifetime= 1000
# maximum lifetime in milliseconds of a connection in the pool after it is closed.
spring.datasource.hikari.auto-commit =true

spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ssZ

logging.level.org.springframework.security=Debug
logging.level.root=INFO
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=ERROR

management.endpoints.web.base-path=/manage

spring.banner.image.pixelmode=block
spring.cloud.features.enabled=true

# To send 100% of traces to Stackdriver Trace
spring.sleuth.sampler.probability=1.0
# To ignore some frequently used URL patterns that are not useful in trace
spring.sleuth.web.skipPattern=(^cleanup.*|.+favicon.*)

# disable instrumentation of executors to avoid the 'async' traces noise
spring.sleuth.scheduled.enabled=false

management.endpoints.web.exposure.include=refresh

spring.messages.basename=messages/messages
logging.level.org.springframework=INFO

server.servlet.session.tracking-modes=cookie
server.servlet.session.cookie.http-only=true
management.endpoint.health.show-details= always